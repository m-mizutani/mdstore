#!/usr/bin/env node

'use strict';

const argv = require('argv');
argv.option([
  {
	  name: 'host',
	  short: 's',
	  type : 'string',
	  description :'redis host',
	  example: '--host=localhost or -s localhost',
  },
  {
	  name: 'port',
	  short: 'p',
	  type : 'int',
	  description :'redis port',
	  example: '--port=6379 or -p 6379',
  },
  {
	  name: 'db',
	  short: 'd',
	  type : 'int',
	  description :'redis db',
	  example: '--db=0 or -d 0',
  },
]);

const mdstore = require('../mdstore');

const args = argv.run();

function usage_and_exit() {
	console.error('syntax) mdredis [update | get | list | hosts] <options...>');
  process.exit(1);
}

if (args.targets.length === 0) {
  usage_and_exit();
}

const redis_opt = {};
const redis_opt_list = ['host', 'port', 'db'];
redis_opt_list.map(key => {
  if (args.options[key]) {
    redis_opt[key] = args.options[key];
  }
});

const mdredis = new mdstore.Redis({}, redis_opt);

const cmd = {
  update() {
	  mdredis.update((err) => {
      if (err) {
        console.error('update: Error,', err);
        process.exit(1);
      } else {
        console.error('update: OK');
        process.exit(0);
      }
	  });
  },

  get() {
    mdredis.get(args.targets[1], (err, res) => {
      if (err) {
        console.error('get: Error,', err);
        process.exit(1);
      } else {
        res.sort((a, b) => {
          return a.ts - b.ts;
        }).map(r => {
          const dt = (r.ts) ? new Date(r.ts * 1000) : '--';
          console.log(dt, r);
        });

        process.exit(0);
      }
    });
  },

  list() {
    mdredis.all((err, res) => {
      if (err) {
        console.error('list: Error,', err);
        process.exit(1);
      } else {
        res.map(key => {
          console.log(key);
        });
        process.exit(0);
      }
    });
  },

  hosts() {
    mdredis.all((err, res) => {
      if (err) {
        console.error('list: Error,', err);
        process.exit(1);
      } else {
        console.log('127.0.0.1\tlocalhost');
        console.log('::1\tlocalhost');
        
        res.map(key => {
          console.log(`127.0.0.1\t${key}`);
        });
        
        process.exit(0);
      }
    });
  },
};

const c = cmd[args.targets[0]];

if (c === undefined) {
  usage_and_exit();
} else {
  c();
}

